name: CI
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Check Env
        run: pip list

      - name: Install dependencies
        run: |
          pip install mlflow
          echo "MLFLOW_TRACKING_USERNAME=${{ secrets.MLFLOW_TRACKING_USERNAME }}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.MLFLOW_TRACKING_PASSWORD }}" >> $GITHUB_ENV

      - name: Run MLflow Project and Capture RUN_ID
        id: run_mlflow
        run: |
          cd MLProject
          mlflow run . --env-manager=local 2>&1 | tee output.log
          
          RUN_ID=$(grep "MLFLOW_RUN_ID=" output.log | cut -d'=' -f2)
          if [ -z "$RUN_ID" ]; then
            RUN_ID=$(grep -oE "[a-f0-9]{32}" output.log | head -n1)
          fi
          
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Validated RUN_ID: $RUN_ID"

      - name: Upload ML artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: MLProject/mlruns/0/${{ env.RUN_ID }}/artifacts

      - name: Build Docker Model
        run: |
          echo "Using RUN_ID: ${{ env.RUN_ID }}"
          export MLFLOW_TRACKING_URI=./MLProject/mlruns
          DOCKER_BUILDKIT=1 docker build -t prodivoz/prodivoz_model-mlflow MLProject

      - name: Log in to DockerHub
        uses: docker/login-action@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag Docker Image
        run: docker tag prodivoz/prodivoz_model-mlflow prodivoz/prodivoz_model-mlflow:latest

      - name: Push Docker Image
        run: docker push prodivoz/prodivoz_model-mlflow:latest
